{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Component } from 'react';\nimport axios from 'axios';\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var res, data;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://api/tvmaze.com/search/shows?q=batman'));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              console.log(\"Show data fetch. Count: \".concat(data.length));\n              return _context.abrupt(\"return\", {\n                shows: data.map(function (entry) {\n                  return entry.show;\n                })\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Index;\n}(Component); // const Index = props => (\n//     <Layout>\n//       <h1>Batman TV Shows</h1>\n//       <ul>\n//         {props.shows.map(show => (\n//           <li key={show.id}>\n//             <Link href='/p/[id]' as={`/p/${show.id}`}>\n//               <a>{show.name} </a>\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </Layout>\n//   );\n//  Index.getInitialProps =  static async function(){\n// const config = { httpsAgent: new HttpsProxyAgent(process.env.https_proxy)\n// }\n// const res = await axios.get('https://api/tvmaze.com/search/shows?q=batman')\n// const data = await res.join();\n//     const res = await fetch('https://api/tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n//     console.log(`Show data fetch. Count: ${data.length}`);\n//     return {\n//       shows: data.map(entry => entry.show)\n//     }\n//   }\n\n\nexport default Index;","map":{"version":3,"sources":["/Users/braucald/Desktop/TKH/pratice_next/pages/index.js"],"names":["Link","fetch","Component","axios","Index","res","json","data","console","log","length","shows","map","entry","show"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAGMC,K;;;;;;;;;;;;;;;;;;;;+CAGoBH,KAAK,CAAC,8CAAD,C;;;AAAjBI,cAAAA,G;;+CACaA,GAAG,CAACC,IAAJ,E;;;AAAbC,cAAAA,I;AAENC,cAAAA,OAAO,CAACC,GAAR,mCAAuCF,IAAI,CAACG,MAA5C;+CAEO;AAEHC,gBAAAA,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAAS,UAAAC,KAAK;AAAA,yBAAIA,KAAK,CAACC,IAAV;AAAA,iBAAd;AAFJ,e;;;;;;;;;;;;EARKZ,S,GAepB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEI;AACA;AACA;AACA;AAGJ;AACA;AAEA;AAEA;AACA;AACA;AAEA;;;AAIA,eAAeE,KAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Component } from 'react';\nimport axios from 'axios'\n\n\nclass Index extends Component{\n    static async getInitialProps() {\n\n        const res = await fetch('https://api/tvmaze.com/search/shows?q=batman');\n        const data = await res.json();\n  \n        console.log(`Show data fetch. Count: ${data.length}`);\n\n        return {\n\n            shows: data.map(entry => entry.show)\n            }\n\n    }\n}\n// const Index = props => (\n\n//     <Layout>\n//       <h1>Batman TV Shows</h1>\n//       <ul>\n//         {props.shows.map(show => (\n//           <li key={show.id}>\n//             <Link href='/p/[id]' as={`/p/${show.id}`}>\n//               <a>{show.name} </a>\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </Layout>\n//   );\n\n\n//  Index.getInitialProps =  static async function(){\n  \n    // const config = { httpsAgent: new HttpsProxyAgent(process.env.https_proxy)\n    // }\n    // const res = await axios.get('https://api/tvmaze.com/search/shows?q=batman')\n    // const data = await res.join();\n    \n   \n//     const res = await fetch('https://api/tvmaze.com/search/shows?q=batman');\n//     const data = await res.json();\n  \n//     console.log(`Show data fetch. Count: ${data.length}`);\n  \n//     return {\n//       shows: data.map(entry => entry.show)\n//     }\n    \n//   }\n\n\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}