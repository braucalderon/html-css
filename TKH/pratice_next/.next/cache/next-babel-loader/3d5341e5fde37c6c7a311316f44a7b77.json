{"ast":null,"code":"var _jsxFileName = \"/Users/braucald/Desktop/TKH/pratice_next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, show.name, \" \"))))));\n\nIndex.getInitialProps = async function () {\n  // const config = { httpsAgent: new HttpsProxyAgent(process.env.https_proxy)\n  // }\n  // const res = await axios.get('https://api/tvmaze.com/search/shows?q=batman')\n  // const data = await res.join();\n  const res = await fetch('https://api/tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetch. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/braucald/Desktop/TKH/pratice_next/pages/index.js"],"names":["Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAEf,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACnB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,MADF,CADF,CADD,CADH,CAFF,CAFJ;;AAgBEN,KAAK,CAACO,eAAN,GAAwB,kBAAgB;AAEtC;AACA;AACA;AACA;AAGA,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0BH,IAAI,CAACI,MAAO,EAAnD;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASW,KAAK,IAAIA,KAAK,CAACV,IAAxB;AADF,GAAP;AAID,CAjBD;;AAqBF,eAAeJ,KAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\n\nconst Index = props => (\n\n    <Layout>\n      <h1>Batman TV Shows</h1>\n      <ul>\n        {props.shows.map(show => (\n          <li key={show.id}>\n            <Link href='/p/[id]' as={`/p/${show.id}`}>\n              <a>{show.name} </a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n  \n  Index.getInitialProps = async function(){\n  \n    // const config = { httpsAgent: new HttpsProxyAgent(process.env.https_proxy)\n    // }\n    // const res = await axios.get('https://api/tvmaze.com/search/shows?q=batman')\n    // const data = await res.join();\n    \n   \n    const res = await fetch('https://api/tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n  \n    console.log(`Show data fetch. Count: ${data.length}`);\n  \n    return {\n      shows: data.map(entry => entry.show)\n    }\n    \n  }\n\n\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}